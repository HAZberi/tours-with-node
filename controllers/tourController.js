const Tour = require('../models/tourModel');

exports.getAllTours = async (_, res) => {
  try {
    const tours = await Tour.find();
    res.status(200).json({
      status: 'success',
      results: tours.length,
      data: {
        tours,
      },
    });
  } catch (err) {
    res.status(404).json({
      status: 'failed',
      message: err,
    });
  }
};

exports.createATour = async (req, res) => {
  try {
    const newTour = await Tour.create(req.body);
    res.status(201).json({
      status: 'success',
      data: {
        tour: newTour,
      },
    });
  } catch (err) {
    res.status(400).json({
      status: 'failed',
      message: err,
    });
  }
};

exports.getATour = async (req, res) => {
  const { id } = req.params;
  try {
    const tour = await Tour.findById(id);
    res.status(200).json({
      status: 'success',
      data: {
        tour,
      },
    });
  } catch (err) {
    res.status(404).json({
      status: 'failed',
      message: err,
    });
  }
};

exports.updateATour = (req, res) => {
  //Not a complete implementation of PATCH HTTP Method
  //A complete implementation will require us to change the local files
  //const { id } = req.params;
  //Normally Ids are automatically generated by the database.
  //Ids are string so remember to convert them to numbers for manipulation

  res.status(200).json({
    status: 'success',
    // data: {
    //   updatedTourData: req.body,
    //   tour: tours[id],
    // },
  });
};

exports.deleteATour = (req, res) => {
  //Not a complete implementation of DELETE HTTP Method
  const { id } = req.params;
  console.log(id);
  //Normally Ids are automatically generated by the database.
  //Ids are string so remember to convert them to numbers for manipulation

  res.status(204).json({
    status: 'success',
    data: null,
  });
};
